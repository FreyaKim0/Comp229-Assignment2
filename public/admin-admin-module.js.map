{"version":3,"sources":["./src/app/admin/order-table/order-table.component.ts","./src/app/admin/order-table/order-table.component.html","./src/app/admin/register/register.component.ts","./src/app/admin/register/register.component.html","./src/app/admin/auth/auth.guard.ts","./src/app/admin/book-table/book-table.component.ts","./src/app/admin/book-table/book-table.component.html","./src/app/admin/admin.component.ts","./src/app/admin/admin.component.html","./src/app/admin/admin.module.ts","./src/app/admin/book-editor/book-editor.component.ts","./src/app/admin/book-editor/book-editor.component.html","./src/app/admin/auth/auth.component.ts","./src/app/admin/auth/auth.component.html"],"names":[],"mappings":"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","file":"admin-admin-module.js","sourcesContent":["import { OrderRepository } from './../../model/order.repository';\nimport { Component, OnInit } from '@angular/core';\nimport { Order } from 'src/app/model/order.model';\nimport { Router } from '@angular/router';\n\n@Component({\n  templateUrl: './order-table.component.html',\n  styleUrls: ['./order-table.component.css']\n})\nexport class OrderTableComponent implements OnInit\n{\n  includeShipped = false;\n  constructor(private repository: OrderRepository,\n              private router: Router){}\n\n  ngOnInit(): void {\n  }\n\n  getOrders(): Order[]\n  {\n    return this.repository.getOrders()\n    .filter(o => this.includeShipped || o.shipped);\n  }\n\n  markShipped(order: Order): void\n  {\n    order.shipped = (order.shipped) ? false : true;\n    this.repository.updateOrder(order);\n    window.location.assign('/admin/main/orders');\n  }\n\n  delete(id: number): void\n  {\n    if (!confirm('Are you sure?'))\n    {\n      console.log(id);\n      this.repository.deleteOrder(id);\n    }\n    else\n    {\n      window.location.assign('/admin/main/orders');\n    }\n  }\n}\n","<div class=\"wrap\">\n  <div id=\"left\">\n    <p class=\"line_title\">\n        My Order History &nbsp;&nbsp;&nbsp;\n        <input type=\"checkbox\" style=\"font-size: 12px; text-align: left;\" [(ngModel)]='includeShipped'>\n        <span style=\"color:rgb(122, 56, 56); font-size:12px; text-align:center;\">\n          &nbsp;Display Shipped Orders\n        </span>\n    </p>\n\n    <hr>\n\n    <table>\n\n      <!--Header-->\n      <tr>\n          <th style=\"width: 18%;\">\n              Order Number\n          </th>\n          <th style=\"width: 18%;\">\n              Postal Code\n          </th>\n          <th style=\"width: 18%;\">\n              Product\n          </th>\n          <th style=\"width: 18%;\">\n              Quantity\n          </th>\n          <th style=\"width: 18%;\">\n              Ship Status\n          </th>\n          <th style=\"width: 10%;\">\n          </th>\n      </tr>\n\n      <tr>\n        <td colspan=\"6\">\n\n        </td>\n      </tr>\n\n      <!--If there is no data to show-->\n      <tr *ngIf='getOrders().length == 0'>\n        <td colspan=\"6\" style=\"color:rgb(197, 191, 191); text-align:center; padding-top:25px;\">\n          There are no unshipped orders.\n        </td>\n      </tr>\n\n\n          <ng-template ngFor let-o [ngForOf]='getOrders()'>\n            <tr>\n              <td style=\"width: 18%; padding-top: 10px;\">{{ o.name }}</td>\n              <td style=\"width: 18%; padding-top: 10px;\">{{ o.postalCode }}</td>\n              <td style=\"width: 18%; padding-top: 10px;\">Product</td>\n              <td style=\"width: 18%; padding-top: 10px;\">Quantity</td>\n              <td style=\"width: 18%; padding-top: 10px; color:maroon;\">\n               {{ o.shipped ? \"Shipped\" : \"Proccessing...\" }}\n              </td>\n              <td style=\"width: 10%;  padding-top: 10px;\">\n                <button class=\"buttonS\" (click)='delete(o._id)'>\n                  <i class=\"fas fa-trash-alt\"></i> Delete\n                </button>\n              </td>\n            </tr>\n\n\n            <tr *ngFor='let line of o.cart.lines'>\n              <td colspan=\"2\"></td>\n              <td>{{ line.book.name }}</td>\n              <td>{{ line.quantity }}</td>\n            </tr>\n\n          </ng-template>\n\n    </table>\n    <hr>\n  </div>\n\n</div>\n\n\n","import { UserRepository } from 'src/app/model/user.repository';\nimport { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { User } from 'src/app/model/user.model';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthService } from '../../model/auth.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  public user: User;\n  public errorMessage: string;\n\n  constructor(private repository: UserRepository,\n              private router: Router,\n              private auth: AuthService,\n              ) { }\n\n  ngOnInit(): void {\n    this.user = new User();\n  }\n\n  // tslint:disable-next-line: typedef\n  register(form: NgForm): void\n  {\n    if (form.valid)\n    {\n      this.repository.addUser(this.user).subscribe(data => {\n\n        if (!data.success)\n        {\n          console.log('Message from backend:' + data.msg);\n        }\n        else\n        {\n          console.log('registration status:' + data.success.toString + '\\nServer:' + data.msg);\n          this.router.navigateByUrl('admin/auth');\n        }\n       });\n    }\n    else\n    {\n      this.errorMessage = 'Please complete all rows.';\n    }\n  }\n}\n","<div id=\"background\">\n<div id=\"placeholder\"></div>\n<div class=\"limiter\">\n<div class=\"main_wrap\">\n\n    <!------------------>\n    <!--Register block-->\n    <!------------------>\n\n    <div id=\"block_wrap\">\n      <form autocomplete='off' #form='ngForm' (ngSubmit)='register(form)'>\n\n\n        <span class=\"account_login\">\n          REGISTER\n        </span><br>\n\n        <!--Authenicain error-->\n        <span style=\"padding-left:20px; font-size:14px; color:red;\" *ngIf='errorMessage != null'>\n        {{errorMessage}}\n        </span>\n\n        <br>\n\n          <span class=\"field_name\">\n            USERNAME\n          </span>\n\n          <div class=\"wrap-input100 validate-input m-b-36\" data-validate = \"Username is required\">\n              <!--username input-->\n              <input [(ngModel)]='user.username'\n                    class=\"input100\"\n                    type=\"text\"\n                    name=\"username\"\n                    id=\"username\"\n                    required autofocus>\n              <span class=\"focus-input100\"></span>\n          </div>\n\n          <span class=\"field_name\">\n            PASSWORD\n          </span>\n\n          <div class=\"wrap-input100 validate-input m-b-12\" data-validate = \"Password is required\">\n            <!--show password letters-->\n            <span class=\"btn-show-pass\">\n              <i class=\"fa fa-eye\"></i>\n            </span>\n\n            <!--password input-->\n            <input [(ngModel)]='user.password'\n                  class=\"input100\"\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                  required>\n            <span class=\"focus-input100\"></span>\n          </div>\n\n        <span class=\"field_name\">\n          EMAIL\n        </span>\n\n        <div class=\"wrap-input100 validate-input m-b-36\" data-validate = \"Email is required\">\n          <!--email input-->\n          <input  [(ngModel)]='user.email'\n                class=\"input100\"\n                type=\"text\"\n                name=\"email\"\n                id=\"email\"\n                required>\n          <span class=\"focus-input100\"></span>\n        </div>\n\n        <span class=\"field_name\">\n          DISPLAY NAME\n        </span>\n\n        <div class=\"wrap-input100 validate-input m-b-36\" data-validate = \"Display name is required\">\n          <!--displayname input-->\n          <input  [(ngModel)]='user.displayName'\n                class=\"input100\"\n                type=\"text\"\n                name=\"displayName\"\n                id=\"displayName\" required>\n          <span class=\"focus-input100\"></span>\n        </div><br>\n\n        <div class=\"container-login100-form-btn\">\n          <!--submit button-->\n          &nbsp;&nbsp;&nbsp;\n          <button class=\"login100-form-btn\">Register</button>\n\n          <!--cancel button-->\n          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n          <a href=\"/\">\n          <input type=\"button\" value=\"Cancel\" class=\"login100-form-btn\">\n          </a>\n        </div>\n      </form>\n    </div>\n\n</div>\n</div>\n</div>\n\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Router, RouterStateSnapshot } from '@angular/router';\r\nimport { AuthService } from 'src/app/model/auth.service';\r\n\r\n\r\n@Injectable()\r\nexport class AuthGuard\r\n{\r\n  path: ActivatedRouteSnapshot[];\r\n  route: ActivatedRouteSnapshot;\r\n\r\n  constructor(private router: Router,\r\n              private auth: AuthService){ }\r\n\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean\r\n  {\r\n    if (this.auth.authenticated)\r\n    {\r\n      console.log('auth.guard: you are authenticated to see this page');\r\n      return true;\r\n    }\r\n    else{\r\n      console.log('auth.guard: cannot authenticate to see this page, go back to login page');\r\n      this.router.navigate(['/admin/auth']);\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Book } from 'src/app/model/book.model';\nimport { BookRepository } from 'src/app/model/book.repository';\n\n@Component({\n  templateUrl: './book-table.component.html',\n  styleUrls: ['./book-table.component.css']\n})\nexport class BookTableComponent implements OnInit {\n  constructor(private repository: BookRepository,\n              private router: Router) { }\n  ngOnInit(): void {\n  }\n  getBooks(): Book[]\n  {\n    return this.repository.getBooks();\n  }\n  deleteBook(id: number): void\n  {\n    if (confirm('This item will be **DELETED PERMANENTLY** , are you sure ?') && (id !== undefined))\n    {\n      this.repository.deleteBook(id);\n    }\n    else\n    {\n      window.location.reload(); // refresh fix\n      this.router.navigateByUrl('/admin/main/books');\n    }\n  }\n  addBook(): void\n  {\n    this.router.navigateByUrl('/admin/main/books/add');\n  }\n  editBook(id: number): void\n  {\n    this.router.navigateByUrl('/admin/main/books/edit/' + id);\n  }\n}\n\n","<!--Shop owner edit their products-->\n\n<button class=\"buttonS\" (click)='addBook()'>\n  <i class=\"fas fa-plus-circle\"></i> &nbsp; Add New Book\n</button>\n\n<button class=\"buttonS\" (click)='addBook()'>\n  <i class=\"fas fa-eye\"></i> &nbsp; View As Public\n</button>\n\n <!--Generate items-->\n    <div id=\"wrapper\">\n      <div *ngFor='let b of getBooks()'>\n        <div class=\"bookDiv\">\n\n          <!--edit button-->\n          <div class=\"editButton\">\n            <div class=\"delete\">\n              <a (click)='deleteBook(b._id)'>\n                <i class=\"fas fa-trash-alt\"></i>\n              </a>\n\n            </div>\n          </div>\n\n          <!--image-->\n          <div class=\"imageDiv\">\n            <div class=\"edit_dialog\">\n              <a (click)='editBook(b._id)'>\n                Edit Item\n              </a>\n            </div>\n          </div>\n\n          <!--book name-->\n          <div class=\"bookName\">\n            {{ b.name }}\n          </div>\n\n          <!--price-->\n          <div>\n            <span style=\"text-decoration: line-through; font-size: 12px;\">$100.00</span>&nbsp;\n            <span style=\"font-size:12px; color:red;\">{{ b.price | currency: 'USD': 'symbol': '2.2-2'}}</span>\n          </div>\n\n       </div>\n      </div>\n    </div>\n\n","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../model/auth.service';\r\n\r\n@Component({\r\n  templateUrl: './admin.component.html',\r\n  styleUrls: ['./admin.component.css']\r\n})\r\nexport class AdminComponent\r\n{\r\n  constructor(private auth: AuthService,\r\n              private router: Router) {}\r\n  logout(): void\r\n  {\r\n    this.auth.logout();\r\n    this.router.navigateByUrl('/');\r\n  }\r\n}\r\n","<!--Personal admin page-->\r\n\r\n<div class=\"text-center mt-3\">MOCK BOOK STORE</div>\r\n\r\n<div class=\"container-fluid\">\r\n\r\n  <!--LEFT COL-->\r\n  <div class=\"row mt-2\">\r\n    <div class=\"col-3 mt-5 \">\r\n      <div id=\"x\">\r\n\r\n        <!--Administrator Name-->\r\n        <div class=\"name_bar\">H</div>\r\n        <span>Human Resources<br><hr style=\"width:200px\"></span>\r\n\r\n        <!--Function lists-->\r\n        <button class=\"buttonS\"\r\n          routerLink='/admin/main/books'\r\n          routerLinkActive='active'>\r\n          Manage My Products\r\n        </button><br><br>\r\n\r\n        <button class=\"buttonS\"\r\n          routerLink='/admin/main/books'\r\n          routerLinkActive='active'>\r\n          Cusotmer Orders\r\n        </button><br>\r\n\r\n        <hr style=\"width:200px\">\r\n\r\n        <button class=\"buttonS\"\r\n          routerLink='/admin/main/mycart'\r\n          routerLinkActive='active'>\r\n          My Shopping Cart\r\n        </button><br><br>\r\n\r\n\r\n        <button class=\"buttonS\"\r\n                routerLink='/admin/main/orders'\r\n                routerLinkActive='active'>\r\n         My Order History\r\n        </button>\r\n\r\n        <hr style=\"width:200px\">\r\n\r\n        <button class=\"buttonS\"\r\n        routerLink='/book-list'\r\n        routerLinkActive='active'>\r\n        Back to Store\r\n        </button>\r\n        <br><br>\r\n\r\n    </div>\r\n  </div>\r\n\r\n  <!--RIGHT COL-->\r\n  <div class=\"col-9\">\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n\r\n  </div>\r\n</div>\r\n\r\n","import { UserRepository } from 'src/app/model/user.repository';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AuthComponent } from './auth/auth.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { AuthGuard } from './auth/auth.guard';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AdminComponent } from './admin.component';\r\nimport { OrderTableComponent } from './order-table/order-table.component';\r\nimport { BookEditorComponent } from './book-editor/book-editor.component';\r\nimport { BookTableComponent } from './book-table/book-table.component';\r\nimport { CartDetailComponent } from '../book-store/cart-detail/cart-detail.component';\r\nimport { RegisterComponent } from './register/register.component';\r\n\r\nconst routing = RouterModule.forChild([\r\n  {path: 'register', component: RegisterComponent, canActivate: [AuthGuard]},\r\n  {path: 'auth', component: AuthComponent},\r\n  {path: 'main', component: AdminComponent, canActivate: [AuthGuard] ,\r\n   children: [\r\n    { path: 'books/:mode/:id', component: BookEditorComponent, data: {title: 'Edit Book'}, canActivate: [AuthGuard]},\r\n    { path: 'books/:mode', component: BookEditorComponent, data: {title: 'Add Book'}, canActivate: [AuthGuard]},\r\n    { path: 'books', component: BookTableComponent, data: {title: 'Book Table'}, canActivate: [AuthGuard]},\r\n    { path: 'orders', component: OrderTableComponent, data: {title: 'Order Table'}, canActivate: [AuthGuard]},\r\n    { path: 'mycart', component: CartDetailComponent, data: {title: 'My Shopping Cart'}, canActivate: [AuthGuard]},\r\n    { path: '**', redirectTo: 'book-list'}]\r\n  },\r\n  {path: '**', redirectTo: 'auth'},\r\n]);\r\n\r\n@NgModule({\r\n  imports: [CommonModule, FormsModule, routing],\r\n  providers: [AuthGuard, UserRepository],\r\n  declarations: [AuthComponent, AdminComponent, OrderTableComponent, BookEditorComponent, BookTableComponent, RegisterComponent]\r\n})\r\nexport class AdminModule{}\r\n","\nimport { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Book } from 'src/app/model/book.model';\nimport { BookRepository } from 'src/app/model/book.repository';\n@Component({\n  templateUrl: './book-editor.component.html',\n  styleUrls: ['./book-editor.component.css']\n})\nexport class BookEditorComponent implements OnInit {\n  editing = false;\n  book: Book = new Book();\n  constructor(private repository: BookRepository,\n              private router: Router,\n              activeRoute: ActivatedRoute)\n  {\n    // Assign that book's data into webpage\n    this.editing = activeRoute.snapshot.params.mode === 'edit';\n    if (this.editing)\n    {\n      console.log('This one:' + activeRoute.snapshot.params.id);\n      Object.assign(this.book, repository.getBook(activeRoute.snapshot.params.id));\n\n      console.log('constructor(edit): this.book.name: ' + this.book.name);\n    }\n  }\n  ngOnInit(): void {}\n  save(form: NgForm): void\n  {\n    this.repository.saveBook(this.book);\n    this.router.navigateByUrl('/admin/main/books');\n  }\n}\n","<!--Edit single book content-->\n\n\n<!--Table-->\n<div class=\"displaySetting\">\n<form novalidate #form='ngForm' (ngSubmit)='save(form)'>\n  <table>\n    <tr>\n      <td rowspan=\"6\" style=\"vertical-align: top;\">\n          <div class=\"imageDiv\">Picture</div>\n      </td>\n\n      <td>\n        Discount Price<br>\n        <input type=\"text\" class=\"input-control\" name=\"price\" [(ngModel)]='book.price'>\n      </td>\n\n    </tr>\n    <tr>\n      <td>\n        Original Price<br>\n        <input type=\"text\" class=\"input-control\" name=\"originalPrice\" [(ngModel)]='book.originalPrice'>\n      </td>\n    </tr>\n    <tr>\n      <td>\n         <!--Book Name-->\n         Book Name<br>\n         <input type=\"text\" class=\"input-control\" name=\"name\" [(ngModel)]='book.name'>\n      </td>\n    </tr>\n    <tr>\n      <td>\n        <!--Publish date-->\n        Publish date<br>\n        <input type=\"text\" class=\"input-control\" name=\"published\" [(ngModel)]='book.published'>\n      </td>\n    </tr>\n    <tr>\n      <td>\n        <!--Author-->\n        Author<br>\n        <input type=\"text\" class=\"input-control\" name=\"author\" [(ngModel)]='book.author'>\n      </td>\n    </tr>\n    <tr>\n      <td>\n        <br> Sale by\n      </td>\n    </tr>\n    <tr>\n      <td>\n        <!--Description-->\n        Description<br>\n        <textarea cols=\"60\" name=\"description\" rows=\"5\" [(ngModel)]='book.description'></textarea>\n      </td>\n      <td>\n\n      </td>\n    </tr>\n  </table>\n  <button type='submit'  class=\"buttonS\">\n    <i class=\"{{editing ? 'fas fa-save' : 'fas fa-plus-circle' }}\"></i>\n    {{ editing ? \"Save Change\" : \"Add This Book\" }}\n  </button>\n\n  <button class=\"buttonS\" type='reset'  routerLink='/admin/main/books'>\n    <i class=\"fas fa-undo\"></i>\n    Cancel\n  </button>\n</form>\n<br><br>\n</div>\n\n<!--Old-->\n\n\n\n\n\n","\nimport { AuthService } from '../../model/auth.service';\nimport { Component, OnInit, OnDestroy, ViewEncapsulation} from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { User } from '../../model/user.model';\nimport { Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n@Component({\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.css'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AuthComponent implements OnInit, OnDestroy {\n  public user: User;\n  public errorMessage: string;\n\n  constructor(private router: Router,\n              private auth: AuthService,\n              // tslint:disable-next-line: variable-name\n              @Inject(DOCUMENT) private _document ) { }\n\n  ngOnInit(): void {\n    this.user = new User();\n    this._document.body.classList.remove('bodybg-color');\n    this._document.body.classList.add('homebg-color');\n  }\n  ngOnDestroy(): void\n  {\n    this._document.body.classList.remove('homebd-color');\n  }\n  goRegister(): void\n  {\n    this.router.navigateByUrl('/admin/register');\n  }\n\n  // tslint:disable-next-line: typedef\n  authenticate(form: NgForm): void\n  {\n    if (form.valid)\n    {\n      this.auth.authenticate(this.user).subscribe(data => {\n\n        // if json data from processLogin coontroll successfully sent back\n        if (data.success)\n          {\n            console.log('auth.component.ts,data token:' + data.token);\n            // Store token and user information in this browser page\n            this.auth.storeUserData(data.token, data.user);\n            this.router.navigateByUrl('home');\n          }\n        else\n        {\n          // if no data is coming back from controller\n          this.errorMessage = 'username or password is worng.';\n        }\n       });\n    }\n    else\n    {\n      // webpage data contraints\n      this.errorMessage = 'Please fill in both rows .';\n    }\n  }\n}\n","<!--Login page-->\n\n<div id=\"background\">\n  <div id=\"placeholder\"></div>\n      <div class=\"limiter\">\n        <div class=\"main_wrap\">\n\n              <!--Login block-->\n          <div id=\"block_wrap\">\n\n            <form autocomplete='off' #form='ngForm' (ngSubmit)='authenticate(form)'>\n\n              <span class=\"account_login\">\n                ACCOUNT LOGIN\n              </span><br>\n\n              <!--Authenicain error-->\n              <span style=\"padding-left:20px; font-size:14px; color:red;\" *ngIf='errorMessage != null'>\n              {{errorMessage}}\n              </span><br>\n\n              <span class=\"field_name\">\n                USERNAME\n              </span>\n\n              <div class=\"wrap-input100\" data-validate = \"Username is required\">\n\n                  <!--username input-->\n                  <input id=\"username\"\n                         required autofocus autocomplete='off'\n                         class=\"input100\"\n                         [(ngModel)]='user.username'\n                         type=\"text\"\n                         name=\"username\"\n                         required>\n                  <span class=\"focus-input100\"></span>\n\n              </div>\n\n\n              <span class=\"field_name\">\n                PASSWORD\n              </span>\n\n              <div class=\"wrap-input100\" data-validate = \"Password is required\">\n\n                <!--view password text-->\n                <span class=\"btn-show-pass\">\n                  <i class=\"fa fa-eye\"></i>\n                </span>\n\n                <!--password input-->\n                <input id=\"password\"  [(ngModel)]='user.password' class=\"input100\" type=\"password\" name=\"password\" >\n                <span class=\"focus-input100\" required autofocus autocomplete='off'></span>\n\n              </div>\n\n              <span class=\"forget\">Forget password?</span>\n              <span class=\"register\">\n              <a (click)='goRegister()'>Register</a>\n              </span>\n\n\n\n\n\n              <div class=\"container-login100-form-btn\">\n                <!--submit button-->\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                <input type=\"submit\" class=\"login100-form-btn\" value=\"Login\">\n                <!--cancel button-->\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                <a routerLink='/home'>\n                <input type=\"button\" value=\"Cancel\" class=\"login100-form-btn\">\n                </a>\n\n\n              </div>\n            </form>\n          </div>\n        </div>\n        <br><br><br>\n      </div>\n    </div>\n\n\n"],"sourceRoot":"webpack:///"}